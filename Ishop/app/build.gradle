apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSDKVersion
    buildToolsVersion '28.0.2'
    defaultConfig {
        applicationId "com.localworld.yiji"
        minSdkVersion rootProject.ext.minSDKVersion
        targetSdkVersion rootProject.ext.targetSDKVersion
        versionCode 1
        versionName "0.0.1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile project.rootProject.file('release.jks')
            storePassword sign_store_pwd
            keyAlias key_alias
            keyPassword sign_key_pwd
            v2SigningEnabled true
        }
        debug {
            storeFile project.rootProject.file('debug.jks')
            storePassword sign_store_pwd
            keyAlias key_alias
            keyPassword sign_key_pwd
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
            jniDebuggable true
            zipAlignEnabled true
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //—————————————————————————————————— google ————————————————————————————————————————————————————
    implementation "com.android.support:appcompat-v7:${LIBRARY_ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:design:${LIBRARY_ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:support-vector-drawable:${LIBRARY_ANDROID_SUPPORT_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    //—————————————————————————————————— IPole core ————————————————————————————————————————————————
    //一极的网络库
    implementation 'org.apache.httpcomponents:httpcore:4.4.8'
    implementation "com.igerm.android.lib:network-heimdall:${LIBRARY_NETWORK_VERSION}"
    //fragmentation框架
    implementation "me.yokeyword:fragmentation-core:${LIBRARY_FRAGMENTATION_VERSION}"
    // To get SwipeBack feature, rely on both fragmentation & fragmentation-swipeback
    // Swipeback is based on fragmentation. Refer to SwipeBackActivity/Fragment for your Customized SupportActivity/Fragment
    // implementation 'me.yokeyword:fragmentation-swipeback:1.1.9'
    //图片库，采用facebook开源的fresco
    implementation "com.facebook.fresco:fresco:${LIBRARY_FRESCO_VERSION}"

    //———————————————————————————————————— 检测工具 —————————————————————————————————————————————————
    //内存泄漏检测
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LIBRARY_LEAK_CANARY_VERSION}"

    //———————————————————————————————————— 3rd lib —————————————————————————————————————————————————
    //--ui辅助库，业务需要自行添加
    implementation "com.youth.banner:banner:${LIBRARY_BANNER_VERSION}"
    implementation "com.igerm.android.lib:indicator:${LIBRARY_INDICATOR_VERSION}"

    implementation 'com.android.support:cardview-v7:27.1.1'

    implementation 'com.lijiankun24:shadowlayout:1.1.0'

    implementation 'com.pingxx:pingpp-core:2.1.18' // (Ping++ 标准版 SDK) 必须添加
//    implementation 'com.pingxx:pingpp-ui:2.1.18' // (Ping++ UI 控件) 使用 Ping++ UI 时添加
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+' // 使用微信支付时添加,具体版本参考微信官方文档
    implementation 'com.pingxx:pingpp-alipay:2.1.18' // 使用支付宝时添加
    implementation 'com.pingxx:pingpp-upacp:2.1.18' // 使用银联支付时添加

}
